Git projesi oluşturmak
	=> git init

Gite dosya eklemek
	=> git add [.(nokta) veya * (yıldız) kullanarak dizindeki bütün dosyaları ekleyebiliriz veya dosya adı eklenebilir.] (Eklenen belgeler geçiş bölgesindedir.)

Dosyaları git deposuna eklemek (Commit etmek)
	=> git commit -m "commit açıklama"
Dosyaları geçiş bölgesinden çıkarmak
	=> git reset HEAD or file_name

Git versionları listelemek
	=> git log (kaydedilen commitleri - versionları listeler)
	=> git log --oneline (kısa acıklamalarla gösterir.)

Git projedeki değişiklikleri listelemek
	=> git status (projedeki dizinle git deposu arasında fark varmı bunu listeler.)

Projedeki dosyalar üzerinde yapılan değişikleri listelemek
	=> git diff

Git deposundaki bir dosyayı silmek
	=> git rm file_name

Git deposundaki bir klasörü ve içindekileri silmek
	=> git rm -r folder_name/

Git deposundaki dosyanın adını değiştirmek
	=> git mv old_file_name new_file_name

Git deposundaki dosyanın konumunu değiştirmek
	=> git mv old_file_name new_directory

Dizindeki dosya değişiklerini geri almak (commit edilmemiş değişiklikler)
	=> git checkout -- file_name
	=> git restore file_name (bu kullanım daha kolay)

Geçiş bölgesindeki dosyanın geri alınması
	=> git restore --staged file_name (dosya geçiş bölgesinden çıkarıldı)
	=> git restore file_name (dosya durumu eskiye döndü, -> içini sildiysen geri almış oldun.)

Git dosyalarındaki versiyonları değiştirmek (Geri almak)
	=> git checkout commit_code -- . or file_name 		(. nokta ile bütün dosyaların versiyonları değiştirilir. veya dosya adı ile tek dosya)

Git projesinde dosyaları geçiş bölgesinden silmeden -> commit silmek 
	=> git reset --soft commit_code

Git projesinde dosyaları geçiş bölgesinden kaldırarak commit silmek
	=> git reset --mixed commit_code

Git projesi için GITHUB Adresi eklemek
	=> git remote add depo_name github_adress 

Gitdeki kayıtlı depoları listelemek
	=>git remote

Git projesini Github'a push etmek
	=> git push -u depo_name master (-u parametresi bütün dosyaların yollanmasını sağlıyor. master ise projenin dalını temsil ediyor.)

Git projesindeki özel dosyaların kaydedilmesini engellemek
	=> cat >> .gitignore
	=> .gitignore
	=> file_name dosyanin içine yazilacak.
	=> git commit -m "dosyalar gizlendi"

Git projesindeki gizli dosyaları listelemek
	=> cat .gitignore

Git .gitignore dosyasını düzenlemek
	=> .gitignore (terminale bunu yazarak editorde direkt açabiliriz)

Git projedesindeki yerel branch'ları listelemek
	=> git branch

Git projesindeki uzak ve yerel (tüm) branchları listelemek
	=> git branch --all

Git projesinde branch (yan-dal) oluşturmak
	=> git branch branch_name

Git projesinde branch'a geçmek
	=> git checkout branch_name

Git projesinde branchlar arasındaki farklılıkları listelemek
	=>git diff branch_name branch_name

Git projesinde branch'ları birleştirmek
	=> git merge branch_name branch_name (branch_name => birleşecek dallardan birinde bulunuluyorsa ikisini yazmaya gerek yok.)

Git projesinde branch silmek
	=> git branch -d branch_name

Git projesinde remote branch silmek
	=> git push repo_name --delete branch_name


